{"ast":null,"code":"var _jsxFileName = \"/home/chigow/react/my-react-app/src/Ani.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextAnimation = () => {\n  _s();\n  const [words] = useState(['Hello', 'World', 'Welcome', 'To', 'My', 'Website']);\n  const [wordIndex, setWordIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [text, setText] = useState('');\n  useEffect(() => {\n    const typeText = () => {\n      if (charIndex < words[wordIndex].length) {\n        setText(prevText => prevText + words[wordIndex].charAt(charIndex));\n        setCharIndex(prevCharIndex => prevCharIndex + 1);\n      } else {\n        setTimeout(deleteText, 1000); // Wait before deleting text\n      }\n    };\n    const deleteText = () => {\n      if (charIndex > 0) {\n        setText(prevText => prevText.slice(0, -1));\n        setCharIndex(prevCharIndex => prevCharIndex - 1);\n      } else {\n        setWordIndex(prevWordIndex => (prevWordIndex + 1) % words.length);\n        setTimeout(typeText, 500); // Wait before typing next word\n      }\n    };\n    const interval = setTimeout(typeText, 100); // Start typing\n    return () => clearTimeout(interval); // Cleanup\n  }, [charIndex, wordIndex, words]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-animation\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"text\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(TextAnimation, \"gCczWYopdOJLODRRX69baq7/+kY=\");\n_c = TextAnimation;\nexport default TextAnimation;\nvar _c;\n$RefreshReg$(_c, \"TextAnimation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TextAnimation","_s","words","wordIndex","setWordIndex","charIndex","setCharIndex","text","setText","typeText","length","prevText","charAt","prevCharIndex","setTimeout","deleteText","slice","prevWordIndex","interval","clearTimeout","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/chigow/react/my-react-app/src/Ani.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nconst TextAnimation = () => {\n  const [words] = useState(['Hello', 'World', 'Welcome', 'To', 'My', 'Website']);\n  const [wordIndex, setWordIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    const typeText = () => {\n      if (charIndex < words[wordIndex].length) {\n        setText((prevText) => prevText + words[wordIndex].charAt(charIndex));\n        setCharIndex((prevCharIndex) => prevCharIndex + 1);\n      } else {\n        setTimeout(deleteText, 1000); // Wait before deleting text\n      }\n    };\n\n    const deleteText = () => {\n      if (charIndex > 0) {\n        setText((prevText) => prevText.slice(0, -1));\n        setCharIndex((prevCharIndex) => prevCharIndex - 1);\n      } else {\n        setWordIndex((prevWordIndex) => (prevWordIndex + 1) % words.length);\n        setTimeout(typeText, 500); // Wait before typing next word\n      }\n    };\n\n    const interval = setTimeout(typeText, 100); // Start typing\n    return () => clearTimeout(interval); // Cleanup\n  }, [charIndex, wordIndex, words]);\n\n  return (\n    <div className=\"text-animation\">\n      <span id=\"text\">{text}</span>\n    </div>\n  );\n};\n\nexport default TextAnimation;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,CAAC,GAAGN,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;EAC9E,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAIJ,SAAS,GAAGH,KAAK,CAACC,SAAS,CAAC,CAACO,MAAM,EAAE;QACvCF,OAAO,CAAEG,QAAQ,IAAKA,QAAQ,GAAGT,KAAK,CAACC,SAAS,CAAC,CAACS,MAAM,CAACP,SAAS,CAAC,CAAC;QACpEC,YAAY,CAAEO,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;MACpD,CAAC,MAAM;QACLC,UAAU,CAACC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;MAChC;IACF,CAAC;IAED,MAAMA,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAIV,SAAS,GAAG,CAAC,EAAE;QACjBG,OAAO,CAAEG,QAAQ,IAAKA,QAAQ,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAC5CV,YAAY,CAAEO,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;MACpD,CAAC,MAAM;QACLT,YAAY,CAAEa,aAAa,IAAK,CAACA,aAAa,GAAG,CAAC,IAAIf,KAAK,CAACQ,MAAM,CAAC;QACnEI,UAAU,CAACL,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;MAC7B;IACF,CAAC;IAED,MAAMS,QAAQ,GAAGJ,UAAU,CAACL,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5C,OAAO,MAAMU,YAAY,CAACD,QAAQ,CAAC,CAAC,CAAC;EACvC,CAAC,EAAE,CAACb,SAAS,EAAEF,SAAS,EAAED,KAAK,CAAC,CAAC;EAEjC,oBACEH,OAAA;IAAKqB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7BtB,OAAA;MAAMuB,EAAE,EAAC,MAAM;MAAAD,QAAA,EAAEd;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnCID,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}